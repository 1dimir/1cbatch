&НаКлиенте
Перем СправочникАвторов;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнициализироватьРеквизитыФормы();
	
	ЗаполнитьСправочникАвторов();
	
	ЗаполнитьРазделительПути();
	
	РазобратьФайлОтчета();
	
	ЗавершитьРаботуСистемы(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСправочникАвторов()
	
	СправочникАвторов = Новый Соответствие;
	
	Если ПустаяСтрока(ПутьКФайлуАвторы) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЧтениеТекста = Новый ЧтениеТекста(
			ПутьКФайлуАвторы,
			КодировкаТекста.UTF8
		);
	Исключение
		Возврат;
	КонецПопытки;
		
	СтрокаИзФайла = ЧтениеТекста.ПрочитатьСтроку();
	Пока СтрокаИзФайла <> Неопределено Цикл
		
		МассивКлючЗначение = СтрРазделить(СтрокаИзФайла, "=");
		
		Если МассивКлючЗначение.Количество() = 2 Тогда

			СправочникАвторов.Вставить(
				СокрЛП(МассивКлючЗначение[0]),
				СокрЛП(МассивКлючЗначение[1])
			);
			
		КонецЕсли;
		
		СтрокаИзФайла = ЧтениеТекста.ПрочитатьСтроку();
		
	КонецЦикла;	
	
	ЧтениеТекста.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделительПути()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86
		Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		
		РазделительПути = "\";
	Иначе
		РазделительПути = "/";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьРеквизитыФормы()
	
	ПараметрыЗапуска = ПолучитьПараметрыЗапуска();	
	
	Если Не ЗначениеЗаполнено(ПараметрыЗапуска["report"]) Тогда
		ЗавершитьРаботуСистемы(Ложь);
		Возврат;
	КонецЕсли;
	ПутьКФайлуОтчета = СокрЛП(ПараметрыЗапуска["report"]);
	
	Если Не ЗначениеЗаполнено(ПараметрыЗапуска["home"]) Тогда
		ЗавершитьРаботуСистемы(Ложь);
		Возврат;
	КонецЕсли;
	ПутьККаталогу = СокрЛП(ПараметрыЗапуска["home"]);
	
	Если ЗначениеЗаполнено(ПараметрыЗапуска["log"]) Тогда
		ПутьКФайлуЖурнала = СокрЛП(ПараметрыЗапуска["log"]);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПараметрыЗапуска["authors"]) Тогда
		ПутьКФайлуАвторы = СокрЛП(ПараметрыЗапуска["authors"]);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПараметрыЗапуска["shift"]) Тогда
		Попытка
			СмещениеВремени = Число(ПараметрыЗапуска["shift"]);
		Исключение
			СмещениеВремени = 0;
		КонецПопытки;
	КонецЕсли; 	
	
	Если ЗначениеЗаполнено(ПараметрыЗапуска["version"]) Тогда
		
		Попытка
			НомерВерсии = Число(СокрЛП(ПараметрыЗапуска["version"]));
		Исключение
			НомерВерсии = 0;
		КонецПопытки;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыЗапуска()
	
	Результат = Новый Соответствие;
	МассивПараметров = СтрРазделить(ПараметрЗапуска, ";");
	
	Для Каждого КлючЗначение Из МассивПараметров Цикл
		
		МассивКлючЗначение = СтрРазделить(КлючЗначение, "=");
		
		Если МассивКлючЗначение.Количество() = 1 Тогда
			
			Результат.Вставить(
				СокрЛП(МассивКлючЗначение[0]),
				Истина
			);

		ИначеЕсли МассивКлючЗначение.Количество() = 2 Тогда

			Результат.Вставить(
				СокрЛП(МассивКлючЗначение[0]),
				МассивКлючЗначение[1]
			);
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура РазобратьФайлОтчета(Команда = Неопределено)
	
	ТабличныйДокумент = Новый ТабличныйДокумент();
	ТабличныйДокумент.Прочитать(ПутьКФайлуОтчета);
	
	СтруктураСобытия = Новый Структура();

	Для НомерСтроки = 1 По ТабличныйДокумент.ВысотаТаблицы Цикл
	
		Заголовок = ТабличныйДокумент.Область(НомерСтроки, 1).Текст;
		Значение = СокрЛП(ТабличныйДокумент.Область(НомерСтроки, 2).Текст);

		Если СтрНайти(Заголовок, "Версия:") > 0 Тогда
			Если СтруктураСобытия.Свойство("Версия") 
				И Значение <> СтруктураСобытия["Версия"] Тогда
				
				СохранитьДанныеВерсии(СтруктураСобытия);
			КонецЕсли;
		
			СтруктураСобытия.Вставить("Версия", СтрЗаменить(Значение, " ", ""));
			
		ИначеЕсли СтрНайти(Заголовок, "Пользователь:") > 0 Тогда
			СтруктураСобытия.Вставить("Автор", Значение);
			
		ИначеЕсли СтрНайти(Заголовок, "Дата создания:") > 0 Тогда
			СтруктураСобытия.Вставить("Дата", Значение);
			
		ИначеЕсли СтрНайти(Заголовок, "Время создания:") > 0 Тогда
			СтруктураСобытия.Вставить("Время", Значение);
			
		ИначеЕсли СтрНайти(Заголовок, "Комментарий:") > 0 Тогда
			СтруктураСобытия.Вставить("Комментарий", Значение);
			
		КонецЕсли;

	КонецЦикла;

	СохранитьДанныеВерсии(СтруктураСобытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеВерсии(СтруктураВерсии)
	
	Если ТипЗнч(СтруктураВерсии) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтруктураВерсии.Свойство("Версия") Или 
		Не ЗначениеЗаполнено(СтруктураВерсии["Версия"]) Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерВерсии > 0 Тогда
		
		Попытка
			Версия = Число(СтруктураВерсии["Версия"]);
			Если Версия < НомерВерсии Тогда
				Возврат;
			КонецЕсли;
		Исключение
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	ИмяФайлаКомментарий = СтрШаблон(
		"%1%2%3.comment",
		ПутьККаталогу,
		?(СтрЗаканчиваетсяНа(ПутьККаталогу, РазделительПути), "", РазделительПути),
		СтруктураВерсии.Версия
	);
	
	ИмяФайлаАвтор = СтрШаблон(
		"%1%2%3.author",
		ПутьККаталогу,
		?(СтрЗаканчиваетсяНа(ПутьККаталогу, РазделительПути), "", РазделительПути),
		СтруктураВерсии.Версия
	);
	
	ИмяФайлаДатаВремя = СтрШаблон(
		"%1%2%3.timestamp",
		ПутьККаталогу,
		?(СтрЗаканчиваетсяНа(ПутьККаталогу, РазделительПути), "", РазделительПути),
		СтруктураВерсии.Версия
	);
	
	АвторПоУмолчанию = "Unknown <example@example.org>";
	
	Комментарий = "";
	Если Не СтруктураВерсии.Свойство("Комментарий", Комментарий) Или
		ПустаяСтрока(Комментарий) Тогда
		Комментарий = "--";
	КонецЕсли;
	
	ЗаписатьВФайл(ИмяФайлаКомментарий, Комментарий);
	
	Автор = "";
	Если Не СтруктураВерсии.Свойство("Автор", Автор) Или
		ПустаяСтрока(Автор) Тогда
		
		Автор = АвторПоУмолчанию;
	Иначе
		Автор = СправочникАвторов[Автор];
		Если Не ЗначениеЗаполнено(Автор) Тогда
			Автор = АвторПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	ЗаписатьВФайл(ИмяФайлаАвтор, Автор);
	
	Дата = "";
	Время = "";
	ДатаВремя = "";
	Если Не СтруктураВерсии.Свойство("Дата", Дата) Или
		ПустаяСтрока(Дата) Или 
		Не СтруктураВерсии.Свойство("Время", Время) Или
		ПустаяСтрока(Время) Тогда
		
		ДатаВремя = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyyTHH:mm:ss"); // текущая дата на клиенте!
	Иначе
		Попытка
			ДатаВремя = СтрШаблон(
				"%1 %2",
				Дата,
				Время
			);
			
			ДатаВремя = Дата(ДатаВремя);
			
			Если СмещениеВремени <> 0 Тогда
				ДатаВремя = ДатаВремя + СмещениеВремени * 60 * 60;
			КонецЕсли;
			
			ДатаВремя = Формат(ДатаВремя, "ДФ=dd.MM.yyyyTHH:mm:ss");
			
		Исключение
			ДатаВремя = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyyTHH:mm:ss"); // текущая дата на клиенте!
		КонецПопытки;
	КонецЕсли;
	ЗаписатьВФайл(ИмяФайлаДатаВремя, ДатаВремя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВФайл(ИмяФайла, Значение)
	
	Запись = Новый ЗаписьТекста(ИмяФайла, "CESU-8");
	Запись.Записать(Значение);
	Запись.Закрыть();
	
КонецПроцедуры


